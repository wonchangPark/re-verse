/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: L3X (https://sketchfab.com/L3X)
license: SKETCHFAB Editorial (https://sketchfab.com/licenses)
source: https://sketchfab.com/3d-models/retro-polaroid-93862442911e4fe598d2b8bf04cee421
title: Retro Polaroid
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Polaroid({ props, position }) {
  const { nodes, materials } = useGLTF("/assets/retro_polaroid/scene.gltf");

  return (
    <group {...props} dispose={null}>
      <group
        rotation={[-Math.PI / 2, 0, Math.PI / 6]}
        scale={0.025}
        position={[48.5, 0.8, -70]}
        // position={position}
      >
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              geometry={nodes.Polaroid_01_Mat_plastic_0.geometry}
              material={materials.Mat_plastic}
              castShadow
              receiveShadow
            />
            <mesh
              geometry={nodes.Polaroid_01_Mat_glass_0.geometry}
              material={materials.Mat_glass}
            />
            <mesh
              geometry={nodes.Polaroid_01_Mat_photo_0.geometry}
              material={materials.Mat_photo}
            />
          </group>
        </group>
      </group>
      {/* 오브젝트 나타나는 지점 */}
      <group>
        <mesh
          rotation={[-0.5 * Math.PI, 0, -0.2 * Math.PI]}
          receiveShadow
          position={[37, 0.01, -68]}
        >
          <planeBufferGeometry attach="geometry" args={[20, 15]} />
          <meshBasicMaterial color="blue" opacity={0.5} transparent />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
