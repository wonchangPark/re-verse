/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: L3X (https://sketchfab.com/L3X)
license: SKETCHFAB Editorial (https://sketchfab.com/licenses)
source: https://sketchfab.com/3d-models/retro-polaroid-93862442911e4fe598d2b8bf04cee421
title: Retro Polaroid
*/

import React, { useRef } from "react";
import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { gsap } from "gsap";
import { useBox } from "@react-three/cannon";
import { useDispatch, useSelector } from "react-redux";
import { setTravelReadIsOpen } from "../../modules/reverse";

export function Polaroid({ props, position, event, rotation }) {
  const { nodes, materials } = useGLTF("/assets/retro_polaroid/scene.gltf");

  const travelObject = useRef();
  const travelSpot = useRef();

  // modal창 열어주세요
  const dispatch = useDispatch();

  const [boxCollider] = useBox((props) => ({
    mass: 100000,
    args: [5, 5, 5],
    type: "Static",
    position,
    ...props,
  }));
  return (
    <group {...props} dispose={null}>
      <group
        ref={travelObject}
        rotation={rotation}
        scale={0.05}
        position={position}
      >
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              geometry={nodes.Polaroid_01_Mat_plastic_0.geometry}
              material={materials.Mat_plastic}
              castShadow
              receiveShadow
              onPointerOver={(e) => {
                document.getElementsByTagName("body")[0].style.cursor =
                  "pointer";
              }}
              onPointerLeave={(e) => {
                document.getElementsByTagName("body")[0].style.cursor = "";
              }}
              onClick={() => {
                dispatch(setTravelReadIsOpen());
              }}
            />
            <mesh
              geometry={nodes.Polaroid_01_Mat_glass_0.geometry}
              material={materials.Mat_glass}
            />
            <mesh
              geometry={nodes.Polaroid_01_Mat_photo_0.geometry}
              material={materials.Mat_photo}
            />
          </group>
        </group>
        <group>
          <mesh
            ref={boxCollider}
            scale={50}
            position={position}
            {...props}
            name={"plaroid"}
          >
            <meshLambertMaterial color={"hotpink"} />
          </mesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
